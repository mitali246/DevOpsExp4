pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Environment Setup') {
            steps {
                echo 'Setting up environment and installing dependencies...'
                sh '''
                    python3 -m venv venv
                    source venv/bin/activate
                    venv/bin/pip install --upgrade pip
                    venv/bin/pip install pytest selenium

                    CHROME_BIN="/Applications/Google Chrome.app/Contents/MacOS/Google Chrome"
                    CHROME_VERSION=$("$CHROME_BIN" --version | awk '{print $3}' | cut -d'.' -f1)

                    LATEST=$(curl -s https://chromedriver.storage.googleapis.com/LATEST_RELEASE_${CHROME_VERSION})
                    curl -L https://chromedriver.storage.googleapis.com/$LATEST/chromedriver_mac64.zip -o chromedriver.zip
                    unzip -o chromedriver.zip
                    chmod +x chromedriver
                    mv chromedriver venv/bin/
                '''
            }
        }

        stage('Run Selenium Tests') {
            steps {
                echo 'Running Selenium tests with pytest...'
                sh '''
                    source venv/bin/activate
                    venv/bin/pytest --maxfail=1 --disable-warnings -q
                '''
            }
        }
    }

    post {
        always {
            echo 'Cleaning up workspace...'
            sh 'rm -f chromedriver.zip || true'
        }
        success {
            echo 'Pipeline completed successfully!'
        }
        failure {
            echo 'Pipeline failed. Please check logs.'
        }
    }
}
